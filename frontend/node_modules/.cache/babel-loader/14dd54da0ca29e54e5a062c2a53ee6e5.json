{"ast":null,"code":"var _jsxFileName = \"/Users/Cary/Projects/software_engineering/nycroute/rokietnica-logistical-app/front-end/nycroute-app/src/LineIcon.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LineIcon = props => {\n  _s();\n\n  const ImportedIconRef = useRef(null);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    setLoading(true);\n\n    const importIcon = async () => {\n      try {\n        ImportedIconRef.current = (await import(`./line_icons/${props.line.toLowerCase()}}.svg`)).ReactComponent;\n      } catch (err) {\n        // Your own error handling logic, throwing error for the sake of\n        // simplicity\n        throw err;\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    importIcon();\n  }, [name]);\n\n  if (!loading && ImportedIconRef.current) {\n    const {\n      current: ImportedIcon\n    } = ImportedIconRef;\n    return /*#__PURE__*/_jsxDEV(ImportedIcon, { ...rest\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this);\n  }\n\n  return null;\n};\n\n_s(LineIcon, \"EAO6P/n3XEN/ha5Td3TxmxA/7Yo=\");\n\n_c = LineIcon;\nexport default LineIcon;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineIcon\");","map":{"version":3,"sources":["/Users/Cary/Projects/software_engineering/nycroute/rokietnica-logistical-app/front-end/nycroute-app/src/LineIcon.js"],"names":["React","useRef","useEffect","LineIcon","props","ImportedIconRef","loading","setLoading","useState","importIcon","current","line","toLowerCase","ReactComponent","err","name","ImportedIcon","rest"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAMC,eAAe,GAAGJ,MAAM,CAAC,IAAD,CAA9B;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBC,QAAQ,CAAC,KAAD,CAAtC;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,UAAME,UAAU,GAAG,YAAY;AAC7B,UAAI;AACFJ,QAAAA,eAAe,CAACK,OAAhB,GAA0B,CACxB,MAAM,OAAQ,gBAAeN,KAAK,CAACO,IAAN,CAAWC,WAAX,EAAyB,OAAhD,CADkB,EAExBC,cAFF;AAGD,OAJD,CAIE,OAAOC,GAAP,EAAY;AACZ;AACA;AACA,cAAMA,GAAN;AACD,OARD,SAQU;AACRP,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,KAZD;;AAaAE,IAAAA,UAAU;AACX,GAhBQ,EAgBN,CAACM,IAAD,CAhBM,CAAT;;AAkBA,MAAI,CAACT,OAAD,IAAYD,eAAe,CAACK,OAAhC,EAAyC;AACvC,UAAM;AAAEA,MAAAA,OAAO,EAAEM;AAAX,QAA4BX,eAAlC;AACA,wBAAO,QAAC,YAAD,OAAkBY;AAAlB;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,SAAO,IAAP;AACD,CA5BD;;GAAMd,Q;;KAAAA,Q;AA8BN,eAAeA,QAAf","sourcesContent":["import React, { useRef, useEffect } from \"react\";\n\nconst LineIcon = (props) => {\n  const ImportedIconRef = useRef(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    const importIcon = async () => {\n      try {\n        ImportedIconRef.current = (\n          await import(`./line_icons/${props.line.toLowerCase()}}.svg`)\n        ).ReactComponent;\n      } catch (err) {\n        // Your own error handling logic, throwing error for the sake of\n        // simplicity\n        throw err;\n      } finally {\n        setLoading(false);\n      }\n    };\n    importIcon();\n  }, [name]);\n\n  if (!loading && ImportedIconRef.current) {\n    const { current: ImportedIcon } = ImportedIconRef;\n    return <ImportedIcon {...rest} />;\n  }\n\n  return null;\n};\n\nexport default LineIcon;\n"]},"metadata":{},"sourceType":"module"}