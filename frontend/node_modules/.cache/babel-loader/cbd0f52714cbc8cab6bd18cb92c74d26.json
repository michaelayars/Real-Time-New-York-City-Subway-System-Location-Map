{"ast":null,"code":"var _jsxFileName = \"/Users/Cary/Projects/software_engineering/nycroute/rokietnica-logistical-app/front-end/src/Subwaylines.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport SubwayIcon from \"./SubwayIcon\";\nimport \"./Subwaylines.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Lines() {\n  _s();\n\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    // fetch some mock data about animals for sale\n    axios(\"https://my.api.mockaroo.com/line0.json?key=57b58bf0\").then(response => {\n      // extract the data from the server response\n      setData(response.data);\n    }).catch(err => {\n      // Mockaroo, which we're using for our Mock API, only allows 200 requests per day on the free plan\n      console.log(`Sorry, buster.  No more requests allowed today!`);\n      console.error(err); // the server returned an error... probably too many requests... until we pay!\n      // make some backup fake data\n\n      const backupData = [{\n        id: 1,\n        line: \"1\",\n        stations: [{\n          id: 1,\n          name: \"first\",\n          uptown: \"[4, 5, 6]\",\n          downtown: \"[2, 4, 7, 10]\"\n        }, {\n          id: 2,\n          name: \"second\",\n          uptown: \"[5]\",\n          downtown: \"[2, 5]\"\n        }, {\n          id: 3,\n          name: \"third\",\n          uptown: \"[4,5,6,7]\",\n          downtown: \"[4,5,6,7]\"\n        }, {\n          id: 4,\n          name: \"fourth\",\n          uptown: \"[2, 5]\",\n          downtown: \"[5]\"\n        }]\n      }];\n      setData(backupData);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid-container\",\n    children: data.map(item => /*#__PURE__*/_jsxDEV(SubwayIcon, {\n      details: item\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Lines, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n\n_c = Lines;\nexport default Lines;\n\nvar _c;\n\n$RefreshReg$(_c, \"Lines\");","map":{"version":3,"sources":["/Users/Cary/Projects/software_engineering/nycroute/rokietnica-logistical-app/front-end/src/Subwaylines.js"],"names":["React","useState","useEffect","axios","SubwayIcon","Lines","data","setData","then","response","catch","err","console","log","error","backupData","id","line","stations","name","uptown","downtown","map","item"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,OAAO,mBAAP;;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ;AACAC,IAAAA,KAAK,CAAC,qDAAD,CAAL,CACGK,IADH,CACSC,QAAD,IAAc;AAClB;AACAF,MAAAA,OAAO,CAACE,QAAQ,CAACH,IAAV,CAAP;AACD,KAJH,EAKGI,KALH,CAKUC,GAAD,IAAS;AACd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAa,iDAAb;AACAD,MAAAA,OAAO,CAACE,KAAR,CAAcH,GAAd,EAHc,CAGM;AAEpB;;AACA,YAAMI,UAAU,GAAG,CACjB;AACEC,QAAAA,EAAE,EAAG,CADP;AAEEC,QAAAA,IAAI,EAAE,GAFR;AAGEC,QAAAA,QAAQ,EAAE,CACR;AACEF,UAAAA,EAAE,EAAE,CADN;AAEEG,UAAAA,IAAI,EAAE,OAFR;AAGEC,UAAAA,MAAM,EAAE,WAHV;AAIEC,UAAAA,QAAQ,EAAE;AAJZ,SADQ,EAOR;AACEL,UAAAA,EAAE,EAAE,CADN;AAEEG,UAAAA,IAAI,EAAE,QAFR;AAGEC,UAAAA,MAAM,EAAE,KAHV;AAIEC,UAAAA,QAAQ,EAAE;AAJZ,SAPQ,EAaR;AACEL,UAAAA,EAAE,EAAE,CADN;AAEEG,UAAAA,IAAI,EAAE,OAFR;AAGEC,UAAAA,MAAM,EAAE,WAHV;AAIEC,UAAAA,QAAQ,EAAE;AAJZ,SAbQ,EAmBR;AACEL,UAAAA,EAAE,EAAE,CADN;AAEEG,UAAAA,IAAI,EAAE,QAFR;AAGEC,UAAAA,MAAM,EAAE,QAHV;AAIEC,UAAAA,QAAQ,EAAE;AAJZ,SAnBQ;AAHZ,OADiB,CAAnB;AAiCAd,MAAAA,OAAO,CAACQ,UAAD,CAAP;AACD,KA7CH;AA8CD,GAhDM,EAgDJ,EAhDI,CAAT;AAiDA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,cACKT,IAAI,CAACgB,GAAL,CAAUC,IAAD,iBACN,QAAC,UAAD;AAA4B,MAAA,OAAO,EAAIA;AAAvC,OAAmBA,IAAI,CAACP,EAAxB;AAAA;AAAA;AAAA;AAAA,YADH;AADL;AAAA;AAAA;AAAA;AAAA,UADF;AAOH;;GA1DQX,K;;KAAAA,K;AA4DT,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport SubwayIcon from \"./SubwayIcon\";\n\nimport \"./Subwaylines.css\";\n\nfunction Lines() {\n    const [data, setData] = useState([]);\n    useEffect(() => {\n        // fetch some mock data about animals for sale\n        axios(\"https://my.api.mockaroo.com/line0.json?key=57b58bf0\")\n          .then((response) => {\n            // extract the data from the server response\n            setData(response.data);\n          })\n          .catch((err) => {\n            // Mockaroo, which we're using for our Mock API, only allows 200 requests per day on the free plan\n            console.log(`Sorry, buster.  No more requests allowed today!`);\n            console.error(err); // the server returned an error... probably too many requests... until we pay!\n    \n            // make some backup fake data\n            const backupData = [\n              {\n                id : 1,\n                line: \"1\",\n                stations: [\n                  {\n                    id: 1,\n                    name: \"first\",\n                    uptown: \"[4, 5, 6]\",\n                    downtown: \"[2, 4, 7, 10]\",\n                  },\n                  {\n                    id: 2,\n                    name: \"second\",\n                    uptown: \"[5]\",\n                    downtown: \"[2, 5]\",\n                  },\n                  {\n                    id: 3,\n                    name: \"third\",\n                    uptown: \"[4,5,6,7]\",\n                    downtown: \"[4,5,6,7]\",\n                  },\n                  {\n                    id: 4,\n                    name: \"fourth\",\n                    uptown: \"[2, 5]\",\n                    downtown: \"[5]\",\n                  },\n                ],\n              },\n            ];\n    \n            setData(backupData);\n          });\n      }, []); \n    return (\n      <div className=\"grid-container\">\n          {data.map((item) => (\n              <SubwayIcon key = {item.id} details = {item}/>\n          ))}\n      </div>\n        );\n}\n\nexport default Lines;\n"]},"metadata":{},"sourceType":"module"}