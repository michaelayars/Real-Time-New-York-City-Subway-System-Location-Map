{"ast":null,"code":"var _jsxFileName = \"/Users/Cary/Projects/software_engineering/nycroute/rokietnica-logistical-app/front-end/nycroute-app/src/SubwayStation.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport \"./SubwayStation.css\";\nimport stationData from \"./stationData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LineCard = props => {\n  const iconPath = `../public/line_icons/${props.line.toLowerCase()}.svg`;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"cardWrapper\",\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        className: \"lineTitle\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: iconPath\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n        className: \"mb-2 text-muted\",\n        children: \"Downtown\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        children: \"2 min\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n        className: \"mb-2 text-muted\",\n        children: \"Uptown\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        children: \"4 min\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_c = LineCard;\n\nconst SubwayStation = props => {\n  const stationID = props.match.params.id;\n  let station; // find station with matching id, assuming array format\n\n  for (let st of stationData) {\n    if (st.id === stationID) {\n      station = st;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"stationName\",\n      children: station.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"backBtnWrapper\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        className: \"App-link\",\n        to: `/stations`,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cardsWrapper\",\n      children: station.lines.map(line => {\n        return /*#__PURE__*/_jsxDEV(LineCard, {\n          line: line\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = SubwayStation;\nexport default SubwayStation;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LineCard\");\n$RefreshReg$(_c2, \"SubwayStation\");","map":{"version":3,"sources":["/Users/Cary/Projects/software_engineering/nycroute/rokietnica-logistical-app/front-end/nycroute-app/src/SubwayStation.js"],"names":["React","Link","Card","Button","stationData","LineCard","props","iconPath","line","toLowerCase","SubwayStation","stationID","match","params","id","station","st","name","lines","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AAEA,OAAO,qBAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,QAAMC,QAAQ,GAAI,wBAAuBD,KAAK,CAACE,IAAN,CAAWC,WAAX,EAAyB,MAAlE;AACA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA,2BACE,QAAC,IAAD,CAAM,IAAN;AAAA,8BACE,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,WAAtB;AAAA,+BACE;AAAK,UAAA,GAAG,EAAEF;AAAV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,IAAD,CAAM,QAAN;AAAe,QAAA,SAAS,EAAC,iBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE,QAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAME,QAAC,IAAD,CAAM,QAAN;AAAe,QAAA,SAAS,EAAC,iBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAOE,QAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAfD;;KAAMF,Q;;AAiBN,MAAMK,aAAa,GAAIJ,KAAD,IAAW;AAC/B,QAAMK,SAAS,GAAGL,KAAK,CAACM,KAAN,CAAYC,MAAZ,CAAmBC,EAArC;AACA,MAAIC,OAAJ,CAF+B,CAI/B;;AACA,OAAK,IAAIC,EAAT,IAAeZ,WAAf,EAA4B;AAC1B,QAAIY,EAAE,CAACF,EAAH,KAAUH,SAAd,EAAyB;AACvBI,MAAAA,OAAO,GAAGC,EAAV;AACD;AACF;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA,gBAA6BD,OAAO,CAACE;AAArC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,UAAhB;AAA2B,QAAA,EAAE,EAAG,WAAhC;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAOE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,gBACGF,OAAO,CAACG,KAAR,CAAcC,GAAd,CAAmBX,IAAD,IAAU;AAC3B,4BAAO,QAAC,QAAD;AAAU,UAAA,IAAI,EAAEA;AAAhB;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFA;AADH;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CA1BD;;MAAME,a;AA4BN,eAAeA,aAAf","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\n\nimport \"./SubwayStation.css\";\nimport stationData from \"./stationData\";\n\nconst LineCard = (props) => {\n  const iconPath = `../public/line_icons/${props.line.toLowerCase()}.svg`;\n  return (\n    <Card className=\"cardWrapper\">\n      <Card.Body>\n        <Card.Title className=\"lineTitle\">\n          <img src={iconPath} />\n        </Card.Title>\n        <Card.Subtitle className=\"mb-2 text-muted\">Downtown</Card.Subtitle>\n        <Card.Text>2 min</Card.Text>\n        <Card.Subtitle className=\"mb-2 text-muted\">Uptown</Card.Subtitle>\n        <Card.Text>4 min</Card.Text>\n      </Card.Body>\n    </Card>\n  );\n};\n\nconst SubwayStation = (props) => {\n  const stationID = props.match.params.id;\n  let station;\n\n  // find station with matching id, assuming array format\n  for (let st of stationData) {\n    if (st.id === stationID) {\n      station = st;\n    }\n  }\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"stationName\">{station.name}</h1>\n      <div className=\"backBtnWrapper\">\n        <Link className=\"App-link\" to={`/stations`}>\n          <Button variant=\"danger\">Back</Button>\n        </Link>\n      </div>\n      <div className=\"cardsWrapper\">\n        {station.lines.map((line) => {\n          return <LineCard line={line} />;\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default SubwayStation;\n"]},"metadata":{},"sourceType":"module"}