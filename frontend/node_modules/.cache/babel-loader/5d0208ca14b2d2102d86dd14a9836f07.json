{"ast":null,"code":"var _jsxFileName = \"/Users/Cary/Projects/software_engineering/nycroute/rokietnica-logistical-app/front-end/src/SubwayStations.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport axios from \"axios\";\nimport SubwayStationItem from \"./SubwayStationItem\";\nimport \"./SubwayStations.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EXPRESS_DOMAIN = \"http://localhost:4000\";\n\nconst SubwayStations = () => {\n  _s();\n\n  const [stations, setStations] = useState([{\n    id: \"\",\n    name: \"\",\n    routes: []\n  }]);\n  const [loading, setLoading] = useState(true);\n  const [showFailure, setFailure] = useState(false);\n  useEffect(() => {\n    axios.get(EXPRESS_DOMAIN + \"/allStations\").then(res => {\n      setStations(res.data.sort((a, b) => a.name >= b.name ? 1 : -1));\n      console.log(stations);\n    }).catch(err => {\n      setFailure(true);\n      console.error(err);\n    }).finally(() => {\n      setLoading(false);\n    });\n  }, []);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Stations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinnerWrapper\",\n        children: /*#__PURE__*/_jsxDEV(Spinner, {\n          className: \"spinner\",\n          animation: \"border\",\n          role: \"status\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"visually-hidden\",\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Stations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n      className: \"stationsWrapper\",\n      children: stations.map(st => {\n        return /*#__PURE__*/_jsxDEV(SubwayStationItem, {\n          station: st\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SubwayStations, \"I5GFlcjOyrH4/iF6EdDBri0RYJk=\");\n\n_c = SubwayStations;\nexport default SubwayStations;\n\nvar _c;\n\n$RefreshReg$(_c, \"SubwayStations\");","map":{"version":3,"sources":["/Users/Cary/Projects/software_engineering/nycroute/rokietnica-logistical-app/front-end/src/SubwayStations.js"],"names":["React","useEffect","useState","ListGroup","Spinner","axios","SubwayStationItem","EXPRESS_DOMAIN","SubwayStations","stations","setStations","id","name","routes","loading","setLoading","showFailure","setFailure","get","then","res","data","sort","a","b","console","log","catch","err","error","finally","map","st"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAO,sBAAP;;AAEA,MAAMC,cAAc,GAAG,uBAAvB;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,CAAC;AAAES,IAAAA,EAAE,EAAE,EAAN;AAAUC,IAAAA,IAAI,EAAE,EAAhB;AAAoBC,IAAAA,MAAM,EAAE;AAA5B,GAAD,CAAD,CAAxC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACc,WAAD,EAAcC,UAAd,IAA4Bf,QAAQ,CAAC,KAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,KAAK,CACFa,GADH,CACOX,cAAc,GAAG,cADxB,EAEGY,IAFH,CAESC,GAAD,IAAS;AACbV,MAAAA,WAAW,CAACU,GAAG,CAACC,IAAJ,CAASC,IAAT,CAAc,CAACC,CAAD,EAAIC,CAAJ,KAAWD,CAAC,CAACX,IAAF,IAAUY,CAAC,CAACZ,IAAZ,GAAmB,CAAnB,GAAuB,CAAC,CAAjD,CAAD,CAAX;AACAa,MAAAA,OAAO,CAACC,GAAR,CAAYjB,QAAZ;AACD,KALH,EAMGkB,KANH,CAMUC,GAAD,IAAS;AACdX,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAQ,MAAAA,OAAO,CAACI,KAAR,CAAcD,GAAd;AACD,KATH,EAUGE,OAVH,CAUW,MAAM;AACbf,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAZH;AAaD,GAdQ,EAcN,EAdM,CAAT;;AAgBA,MAAID,OAAJ,EAAa;AACX,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,+BACE,QAAC,OAAD;AAAS,UAAA,SAAS,EAAC,SAAnB;AAA6B,UAAA,SAAS,EAAC,QAAvC;AAAgD,UAAA,IAAI,EAAC,QAArD;AAAA,iCACE;AAAM,YAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AAED,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAW,MAAA,SAAS,EAAC,iBAArB;AAAA,gBACGL,QAAQ,CAACsB,GAAT,CAAcC,EAAD,IAAQ;AACpB,4BAAO,QAAC,iBAAD;AAAmB,UAAA,OAAO,EAAEA;AAA5B;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFA;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CA5CD;;GAAMxB,c;;KAAAA,c;AA8CN,eAAeA,cAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport axios from \"axios\";\n\nimport SubwayStationItem from \"./SubwayStationItem\";\nimport \"./SubwayStations.css\";\n\nconst EXPRESS_DOMAIN = \"http://localhost:4000\";\n\nconst SubwayStations = () => {\n  const [stations, setStations] = useState([{ id: \"\", name: \"\", routes: [] }]);\n  const [loading, setLoading] = useState(true);\n  const [showFailure, setFailure] = useState(false);\n\n  useEffect(() => {\n    axios\n      .get(EXPRESS_DOMAIN + \"/allStations\")\n      .then((res) => {\n        setStations(res.data.sort((a, b) => (a.name >= b.name ? 1 : -1)));\n        console.log(stations);\n      })\n      .catch((err) => {\n        setFailure(true);\n        console.error(err);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, []);\n\n  if (loading) {\n    return (\n      <div>\n        <h1>Stations</h1>\n        <div className=\"spinnerWrapper\">\n          <Spinner className=\"spinner\" animation=\"border\" role=\"status\">\n            <span className=\"visually-hidden\">Loading...</span>\n          </Spinner>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <h1>Stations</h1>\n      <ListGroup className=\"stationsWrapper\">\n        {stations.map((st) => {\n          return <SubwayStationItem station={st} />;\n        })}\n      </ListGroup>\n    </div>\n  );\n};\n\nexport default SubwayStations;\n"]},"metadata":{},"sourceType":"module"}