{"ast":null,"code":"var _jsxFileName = \"/Users/Cary/Projects/software_engineering/nycroute/rokietnica-logistical-app/front-end/nycroute-app/src/SubwayStations.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./SubwayStations.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SubwayStations = () => {\n  _s();\n\n  const [stations, setStations] = useState([]);\n  useEffect(() => {\n    axios(\"http://localhost:4000/stationData\").then(res => {\n      setStations(res.data.stations.sort((a, b) => a[\"Stop Name\"] >= b[\"Stop Name\"] ? 1 : -1));\n    }).catch(err => {\n      console.error(err);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Stations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n      className: \"stationsWrapper\",\n      children: stations.map(st => /*#__PURE__*/_jsxDEV(Link, {\n        className: \"App-link\",\n        to: `/stations/${st[\"Station ID\"]}`,\n        children: /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          action: true,\n          children: st[\"Stop Name\"]\n        }, st[\"Station ID\"], false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SubwayStations, \"KV8CcP3gcIUxQ2C9moSCRW/KKrI=\");\n\n_c = SubwayStations;\nexport default SubwayStations;\n\nvar _c;\n\n$RefreshReg$(_c, \"SubwayStations\");","map":{"version":3,"sources":["/Users/Cary/Projects/software_engineering/nycroute/rokietnica-logistical-app/front-end/nycroute-app/src/SubwayStations.js"],"names":["React","useEffect","useState","ListGroup","Link","axios","SubwayStations","stations","setStations","then","res","data","sort","a","b","catch","err","console","error","map","st"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,sBAAP;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,KAAK,CAAC,mCAAD,CAAL,CACGI,IADH,CACSC,GAAD,IAAS;AACbF,MAAAA,WAAW,CACTE,GAAG,CAACC,IAAJ,CAASJ,QAAT,CAAkBK,IAAlB,CAAuB,CAACC,CAAD,EAAIC,CAAJ,KACrBD,CAAC,CAAC,WAAD,CAAD,IAAkBC,CAAC,CAAC,WAAD,CAAnB,GAAmC,CAAnC,GAAuC,CAAC,CAD1C,CADS,CAAX;AAKD,KAPH,EAQGC,KARH,CAQUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD,KAVH;AAWD,GAZQ,EAYN,EAZM,CAAT;AAaA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAW,MAAA,SAAS,EAAC,iBAArB;AAAA,gBACGT,QAAQ,CAACY,GAAT,CAAcC,EAAD,iBACZ,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,UAAhB;AAA2B,QAAA,EAAE,EAAG,aAAYA,EAAE,CAAC,YAAD,CAAe,EAA7D;AAAA,+BACE,QAAC,SAAD,CAAW,IAAX;AAAuC,UAAA,MAAM,MAA7C;AAAA,oBACGA,EAAE,CAAC,WAAD;AADL,WAAqBA,EAAE,CAAC,YAAD,CAAvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CA7BD;;GAAMd,c;;KAAAA,c;AA+BN,eAAeA,cAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport \"./SubwayStations.css\";\n\nconst SubwayStations = () => {\n  const [stations, setStations] = useState([]);\n  useEffect(() => {\n    axios(\"http://localhost:4000/stationData\")\n      .then((res) => {\n        setStations(\n          res.data.stations.sort((a, b) =>\n            a[\"Stop Name\"] >= b[\"Stop Name\"] ? 1 : -1\n          )\n        );\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }, []);\n  return (\n    <div>\n      <h1>Stations</h1>\n      <ListGroup className=\"stationsWrapper\">\n        {stations.map((st) => (\n          <Link className=\"App-link\" to={`/stations/${st[\"Station ID\"]}`}>\n            <ListGroup.Item key={st[\"Station ID\"]} action>\n              {st[\"Stop Name\"]}\n            </ListGroup.Item>\n          </Link>\n        ))}\n      </ListGroup>\n    </div>\n  );\n};\n\nexport default SubwayStations;\n"]},"metadata":{},"sourceType":"module"}