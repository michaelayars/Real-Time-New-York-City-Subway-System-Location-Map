{"ast":null,"code":"var _jsxFileName = \"/home/sundeep/Downloads/subway-react-final/rokietnica-logistical-app/front-end/src/Homepage.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport { ReactComponent as YourSvg } from \"@svgr/webpack?-svgo,+titleProp,+ref!./logo.svg\";\nimport \"./Homepage.css\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Button from \"@mui/material/Button\";\nimport Menu from \"@mui/material/Menu\"; // import your component functions for use in route links\n\nimport SubwayLinesInfo from \"./SubwayLinesInfo\";\nimport SubwayStation from \"./SubwayStation\";\nimport SubwayStations from \"./SubwayStations\";\nimport Subwaylines from \"./Subwaylines\"; // url to a valid topojson file\n//const geoUrl =\"https://cdn.jsdelivr.net/npm/world-atlas@2/land-50m.json\";\n//const geoUrl = \"https://raw.githubusercontent.com/deldersveld/topojson/master/countries/us-states/NY-36-new-york-counties.json\";\n//const geoUrl = \"https://raw.githubusercontent.com/dwillis/nyc-maps/master/boroughs.geojson\";\n\nimport { ComposableMap, Geographies, Geography } from \"react-simple-maps\"; //const geoUrl = \"https://raw.githubusercontent.com/deldersveld/topojson/master/continents/north-america.json\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst geoUrl = \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n\nfunction App() {\n  // add links to your pages for now\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/\",\n      component: Homepage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/subwayLinesInfo/:id\",\n      component: SubwayLinesInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/stations\",\n      component: SubwayStations\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/stations/:id\",\n      component: SubwayStation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/stationView\",\n      component: SubwayStation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/lines\",\n      component: Subwaylines\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\n\nconst Homepage = () => {\n  _s();\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(YourSvg, {\n        style: {\n          height: 53,\n          width: 36\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Welcome to NYCRoute!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        \"aria-controls\": \"simple-menu\",\n        \"aria-haspopup\": \"true\",\n        onClick: handleClick,\n        children: \"Start your route here!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Menu, {\n        keepMounted: true,\n        anchorEl: anchorEl,\n        onClose: handleClose,\n        open: Boolean(anchorEl),\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          onClick: handleClose,\n          children: \"Map View\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          className: \"App-link\",\n          to: \"/stations\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(MenuItem, {\n            onClick: handleClose,\n            children: \"List of Stations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 11\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          className: \"App-link\",\n          to: \"/lines\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(MenuItem, {\n            onClick: handleClose,\n            children: \"List of Subway Lines\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ComposableMap, {\n        projectionConfig: {\n          scale: 175,\n          rotation: [0, 0, 0]\n        },\n        width: 800,\n        height: 400,\n        style: {\n          width: \"100%\",\n          height: \"100%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Geographies, {\n          geography: geoUrl,\n          children: ({\n            geographies\n          }) => geographies.map(geo => /*#__PURE__*/_jsxDEV(Geography, {\n            geography: geo\n          }, geo.rsmKey, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 12\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Homepage, \"+aMDa7FPcESUyQDF1vq0RSMn4/k=\");\n\n_c2 = Homepage;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Homepage\");","map":{"version":3,"sources":["/home/sundeep/Downloads/subway-react-final/rokietnica-logistical-app/front-end/src/Homepage.js"],"names":["React","Switch","Route","Link","MenuItem","Button","Menu","SubwayLinesInfo","SubwayStation","SubwayStations","Subwaylines","ComposableMap","Geographies","Geography","geoUrl","App","Homepage","anchorEl","setAnchorEl","useState","handleClose","handleClick","event","currentTarget","height","width","Boolean","scale","rotation","geographies","map","geo","rsmKey"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport { ReactComponent as YourSvg } from './logo.svg';\n\nimport \"./Homepage.css\";\n\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Button from \"@mui/material/Button\";\nimport Menu from \"@mui/material/Menu\";\n\n// import your component functions for use in route links\nimport SubwayLinesInfo from \"./SubwayLinesInfo\";\nimport SubwayStation from \"./SubwayStation\";\nimport SubwayStations from \"./SubwayStations\";\nimport Subwaylines from \"./Subwaylines\";\n\n// url to a valid topojson file\n\n//const geoUrl =\"https://cdn.jsdelivr.net/npm/world-atlas@2/land-50m.json\";\n\n//const geoUrl = \"https://raw.githubusercontent.com/deldersveld/topojson/master/countries/us-states/NY-36-new-york-counties.json\";\n\n//const geoUrl = \"https://raw.githubusercontent.com/dwillis/nyc-maps/master/boroughs.geojson\";\n\nimport {\n  ComposableMap,\n  Geographies,\n  Geography,\n} from \"react-simple-maps\"\n//const geoUrl = \"https://raw.githubusercontent.com/deldersveld/topojson/master/continents/north-america.json\";\nconst geoUrl = \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n\n\nfunction App() {\n  // add links to your pages for now\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={Homepage}></Route>\n      <Route path=\"/subwayLinesInfo/:id\" component={SubwayLinesInfo}></Route>\n      <Route exact path=\"/stations\" component={SubwayStations}></Route>\n      <Route path=\"/stations/:id\" component={SubwayStation}></Route>\n      <Route exact path=\"/stationView\" component={SubwayStation}></Route>\n      <Route exact path=\"/lines\" component={Subwaylines}></Route>\n    </Switch>\n  );\n}\n\nconst Homepage = () => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  return (\n    <div>\n       <div>\n   <YourSvg style={{ height: 53, width: 36 }}/>\n </div>\n    <div>\n      <h2>Welcome to NYCRoute!</h2>\n      <Button\n        aria-controls=\"simple-menu\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n      >\n        Start your route here!\n      </Button>\n      <Menu\n        keepMounted\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        open={Boolean(anchorEl)}\n      >\n        <MenuItem onClick={handleClose}>Map View</MenuItem>\n        <Link className=\"App-link\" to=\"/stations\">\n          {\" \"}\n          <MenuItem onClick={handleClose}>List of Stations</MenuItem>{\" \"}\n        </Link>\n        <Link className=\"App-link\" to=\"/lines\">\n          {\" \"}\n          <MenuItem onClick={handleClose}>List of Subway Lines</MenuItem>\n        </Link>\n      </Menu>\n    </div>\n     <div>\n     <ComposableMap\n projectionConfig={{\n   scale: 175,\n   rotation: [0, 0, 0],\n }}\n width={800}\n height={400}\n style={{ width: \"100%\", height: \"100%\" }} \n>\n       <Geographies geography={geoUrl}>\n         {({geographies}) => geographies.map(geo =>\n           <Geography key={geo.rsmKey} geography={geo} />\n         )}\n       </Geographies>\n     </ComposableMap>\n   </div>\n   </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}