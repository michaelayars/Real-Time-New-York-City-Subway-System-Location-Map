{"ast":null,"code":"var _jsxFileName = \"/Users/Cary/Projects/software_engineering/nycroute/rokietnica-logistical-app/front-end/src/SubwayStations.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport axios from \"axios\";\nimport SubwayStationItem from \"./SubwayStationItem\";\nimport \"./SubwayStations.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EXPRESS_DOMAIN = \"http://localhost:4000\";\n\nconst SubwayStations = () => {\n  _s();\n\n  const [stations, setStations] = useState([{\n    id: \"\",\n    name: \"\",\n    routes: []\n  }]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    console.log(\"hey!\");\n    setLoading(true);\n    axios.get(EXPRESS_DOMAIN + \"/allStations\").then(res => {\n      setStations(res.data.sort((a, b) => a.name >= b.name ? 1 : -1));\n      console.log(stations);\n    }).catch(err => {\n      console.error(err);\n    }).finally(() => {\n      setLoading(false);\n    });\n  }, []);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Stations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Stations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n      className: \"stationsWrapper\",\n      children: stations.map(st => {\n        return /*#__PURE__*/_jsxDEV(SubwayStationItem, {\n          station: st\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SubwayStations, \"sTGOLAqW87eWCJ5s0ei+DO0d08w=\");\n\n_c = SubwayStations;\nexport default SubwayStations;\n\nvar _c;\n\n$RefreshReg$(_c, \"SubwayStations\");","map":{"version":3,"sources":["/Users/Cary/Projects/software_engineering/nycroute/rokietnica-logistical-app/front-end/src/SubwayStations.js"],"names":["React","useEffect","useState","ListGroup","axios","SubwayStationItem","EXPRESS_DOMAIN","SubwayStations","stations","setStations","id","name","routes","loading","setLoading","console","log","get","then","res","data","sort","a","b","catch","err","error","finally","map","st"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAO,sBAAP;;AAEA,MAAMC,cAAc,GAAG,uBAAvB;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,CAAC;AAAEQ,IAAAA,EAAE,EAAE,EAAN;AAAUC,IAAAA,IAAI,EAAE,EAAhB;AAAoBC,IAAAA,MAAM,EAAE;AAA5B,GAAD,CAAD,CAAxC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,KAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAF,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAV,IAAAA,KAAK,CACFa,GADH,CACOX,cAAc,GAAG,cADxB,EAEGY,IAFH,CAESC,GAAD,IAAS;AACbV,MAAAA,WAAW,CAACU,GAAG,CAACC,IAAJ,CAASC,IAAT,CAAc,CAACC,CAAD,EAAIC,CAAJ,KAAWD,CAAC,CAACX,IAAF,IAAUY,CAAC,CAACZ,IAAZ,GAAmB,CAAnB,GAAuB,CAAC,CAAjD,CAAD,CAAX;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;AACD,KALH,EAMGgB,KANH,CAMUC,GAAD,IAAS;AACdV,MAAAA,OAAO,CAACW,KAAR,CAAcD,GAAd;AACD,KARH,EASGE,OATH,CASW,MAAM;AACbb,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAXH;AAYD,GAfQ,EAeN,EAfM,CAAT;;AAiBA,MAAID,OAAJ,EAAa;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAW,MAAA,SAAS,EAAC,iBAArB;AAAA,gBACGL,QAAQ,CAACoB,GAAT,CAAcC,EAAD,IAAQ;AACpB,4BAAO,QAAC,iBAAD;AAAmB,UAAA,OAAO,EAAEA;AAA5B;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFA;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAnCD;;GAAMtB,c;;KAAAA,c;AAqCN,eAAeA,cAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport axios from \"axios\";\n\nimport SubwayStationItem from \"./SubwayStationItem\";\nimport \"./SubwayStations.css\";\n\nconst EXPRESS_DOMAIN = \"http://localhost:4000\";\n\nconst SubwayStations = () => {\n  const [stations, setStations] = useState([{ id: \"\", name: \"\", routes: [] }]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    console.log(\"hey!\");\n    setLoading(true);\n    axios\n      .get(EXPRESS_DOMAIN + \"/allStations\")\n      .then((res) => {\n        setStations(res.data.sort((a, b) => (a.name >= b.name ? 1 : -1)));\n        console.log(stations);\n      })\n      .catch((err) => {\n        console.error(err);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, []);\n\n  if (loading) {\n    return <h1>Stations</h1>;\n  }\n\n  return (\n    <div>\n      <h1>Stations</h1>\n      <ListGroup className=\"stationsWrapper\">\n        {stations.map((st) => {\n          return <SubwayStationItem station={st} />;\n        })}\n      </ListGroup>\n    </div>\n  );\n};\n\nexport default SubwayStations;\n"]},"metadata":{},"sourceType":"module"}