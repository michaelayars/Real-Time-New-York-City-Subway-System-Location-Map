{"ast":null,"code":"var _jsxFileName = \"/Users/Cary/Projects/software_engineering/nycroute/rokietnica-logistical-app/front-end/nycroute-app/src/SubwayStations.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./SubwayStations.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SubwayStations = () => {\n  _s();\n\n  const [stationData, setStationData] = useState([]);\n  useEffect(() => {\n    axios(\"/stationData\").then(res => {\n      setStationData(res.data);\n      const stations = stationData.stations;\n      stations.sort((a, b) => a.name >= b.name ? 1 : -1);\n    }).catch(err => {\n      console.error(err);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Stations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n      className: \"stationsWrapper\",\n      children: stations.map(station => /*#__PURE__*/_jsxDEV(Link, {\n        className: \"App-link\",\n        to: `/stations/${station[\"Station ID\"]}`,\n        children: /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          action: true,\n          children: station[\"Stop Name\"]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SubwayStations, \"Sf/vGhtGefPIuZfMRbwOUlNHByI=\");\n\n_c = SubwayStations;\nexport default SubwayStations;\n\nvar _c;\n\n$RefreshReg$(_c, \"SubwayStations\");","map":{"version":3,"sources":["/Users/Cary/Projects/software_engineering/nycroute/rokietnica-logistical-app/front-end/nycroute-app/src/SubwayStations.js"],"names":["React","useEffect","useState","ListGroup","Link","axios","SubwayStations","stationData","setStationData","then","res","data","stations","sort","a","b","name","catch","err","console","error","map","station"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,sBAAP;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,KAAK,CAAC,cAAD,CAAL,CACGI,IADH,CACSC,GAAD,IAAS;AACbF,MAAAA,cAAc,CAACE,GAAG,CAACC,IAAL,CAAd;AACA,YAAMC,QAAQ,GAAGL,WAAW,CAACK,QAA7B;AACAA,MAAAA,QAAQ,CAACC,IAAT,CAAc,CAACC,CAAD,EAAIC,CAAJ,KAAWD,CAAC,CAACE,IAAF,IAAUD,CAAC,CAACC,IAAZ,GAAmB,CAAnB,GAAuB,CAAC,CAAjD;AACD,KALH,EAMGC,KANH,CAMUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD,KARH;AASD,GAVQ,EAUN,EAVM,CAAT;AAWA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAW,MAAA,SAAS,EAAC,iBAArB;AAAA,gBACGN,QAAQ,CAACS,GAAT,CAAcC,OAAD,iBACZ,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,UAAhB;AAA2B,QAAA,EAAE,EAAG,aAAYA,OAAO,CAAC,YAAD,CAAe,EAAlE;AAAA,+BACE,QAAC,SAAD,CAAW,IAAX;AAAgB,UAAA,MAAM,MAAtB;AAAA,oBAAwBA,OAAO,CAAC,WAAD;AAA/B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAzBD;;GAAMhB,c;;KAAAA,c;AA2BN,eAAeA,cAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport \"./SubwayStations.css\";\n\nconst SubwayStations = () => {\n  const [stationData, setStationData] = useState([]);\n  useEffect(() => {\n    axios(\"/stationData\")\n      .then((res) => {\n        setStationData(res.data);\n        const stations = stationData.stations;\n        stations.sort((a, b) => (a.name >= b.name ? 1 : -1));\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }, []);\n  return (\n    <div>\n      <h1>Stations</h1>\n      <ListGroup className=\"stationsWrapper\">\n        {stations.map((station) => (\n          <Link className=\"App-link\" to={`/stations/${station[\"Station ID\"]}`}>\n            <ListGroup.Item action>{station[\"Stop Name\"]}</ListGroup.Item>\n          </Link>\n        ))}\n      </ListGroup>\n    </div>\n  );\n};\n\nexport default SubwayStations;\n"]},"metadata":{},"sourceType":"module"}