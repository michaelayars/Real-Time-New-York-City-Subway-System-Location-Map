{"ast":null,"code":"var _jsxFileName = \"/Users/Cary/Projects/software_engineering/nycroute/rokietnica-logistical-app/front-end/src/SubwayStation.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"react-bootstrap/Button\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport axios from \"axios\";\nimport \"./SubwayStation.css\";\nimport LineCard from \"./LineCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EXPRESS_DOMAIN = \"http://localhost:4000\";\n\nconst SubwayStation = props => {\n  _s();\n\n  const stationID = props.match.params.id;\n  const [station, setStation] = useState({\n    name: \"\",\n    routes: [],\n    traintimes: {}\n  });\n  const [loading, setLoading] = useState(true);\n  const [isRefresh, setRefresh] = useState(false);\n  const [showSuccess, setSuccess] = useState(false);\n  useEffect(() => {\n    axios.get(`${EXPRESS_DOMAIN}/station/${stationID}`).then(res => {\n      setStation(res.data);\n      setSuccess(true);\n    }).catch(err => {\n      console.log(err);\n    }).finally(() => {\n      setRefresh(false);\n      setLoading(false);\n    });\n  }, [isRefresh]);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinnerWrapper\",\n      children: /*#__PURE__*/_jsxDEV(Spinner, {\n        className: \"spinner\",\n        animation: \"border\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (station === \"no station with specified id\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-station\",\n      children: \"No station with the specified ID was found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"stationName\",\n      children: station.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttonsWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        className: \"App-link\",\n        to: \"/stations\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: () => {\n          setRefresh(true);\n        },\n        children: \"Refresh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cardsWrapper\",\n      children: station.routes.map(line => {\n        return /*#__PURE__*/_jsxDEV(LineCard, {\n          line: line,\n          traintimes: station.traintimes[line]\n        }, line, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SubwayStation, \"88FVYaTTL0Qm4235xA2iZrbzWyY=\");\n\n_c = SubwayStation;\nexport default SubwayStation;\n\nvar _c;\n\n$RefreshReg$(_c, \"SubwayStation\");","map":{"version":3,"sources":["/Users/Cary/Projects/software_engineering/nycroute/rokietnica-logistical-app/front-end/src/SubwayStation.js"],"names":["React","useEffect","useState","Link","Button","Spinner","axios","LineCard","EXPRESS_DOMAIN","SubwayStation","props","stationID","match","params","id","station","setStation","name","routes","traintimes","loading","setLoading","isRefresh","setRefresh","showSuccess","setSuccess","get","then","res","data","catch","err","console","log","finally","map","line"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"react-bootstrap/Button\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport axios from \"axios\";\n\nimport \"./SubwayStation.css\";\nimport LineCard from \"./LineCard\";\n\nconst EXPRESS_DOMAIN = \"http://localhost:4000\";\n\nconst SubwayStation = (props) => {\n  const stationID = props.match.params.id;\n  const [station, setStation] = useState({\n    name: \"\",\n    routes: [],\n    traintimes: {},\n  });\n  const [loading, setLoading] = useState(true);\n  const [isRefresh, setRefresh] = useState(false);\n  const [showSuccess, setSuccess] = useState(false);\n\n  useEffect(() => {\n    axios\n      .get(`${EXPRESS_DOMAIN}/station/${stationID}`)\n      .then((res) => {\n        setStation(res.data);\n        setSuccess(true);\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => {\n        setRefresh(false);\n        setLoading(false);\n      });\n  }, [isRefresh]);\n\n  if (loading) {\n    return (\n      <div className=\"spinnerWrapper\">\n        <Spinner className=\"spinner\" animation=\"border\" role=\"status\">\n          <span className=\"visually-hidden\">Loading...</span>\n        </Spinner>\n      </div>\n    );\n  }\n\n  if (station === \"no station with specified id\") {\n    return (\n      <div className=\"no-station\">\n        No station with the specified ID was found.\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"stationName\">{station.name}</h1>\n      <div className=\"buttonsWrapper\">\n        <Link className=\"App-link\" to=\"/stations\">\n          <Button variant=\"danger\">Back</Button>\n        </Link>\n        <Button\n          variant=\"primary\"\n          onClick={() => {\n            setRefresh(true);\n          }}\n        >\n          Refresh\n        </Button>\n      </div>\n      <div className=\"cardsWrapper\">\n        {station.routes.map((line) => {\n          return (\n            <LineCard\n              key={line}\n              line={line}\n              traintimes={station.traintimes[line]}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default SubwayStation;\n"]},"metadata":{},"sourceType":"module"}