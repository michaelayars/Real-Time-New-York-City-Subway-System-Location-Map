{"ast":null,"code":"var _jsxFileName = \"/Users/Cary/Projects/software_engineering/nycroute/rokietnica-logistical-app/front-end/nycroute-app/src/SubwayStation.js\";\nimport React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport \"./SubwayStation.css\";\nimport stationData from \"./stationData\"; // temp mock data for a single station\n// needs to be extracted from props\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst temp_station = {\n  name: \"Astor Pl\",\n  lines: [\"4\", \"5\", \"6\", \"A\", \"B\", \"C\", \"1\", \"2\", \"3\"]\n};\n\nconst SubwayStation = () => {\n  const stationID = props.match.params.id;\n  const station = stationData.filter(obj => obj.id == stationID);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"stationName\",\n      children: station.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cardsWrapper\",\n      children: station.lines.map(line => /*#__PURE__*/_jsxDEV(Card, {\n        className: \"cardWrapper\",\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            className: \"lineTitle\",\n            children: line\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n            className: \"mb-2 text-muted\",\n            children: \"Downtown\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: \"2 min\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n            className: \"mb-2 text-muted\",\n            children: \"Uptown\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: \"4 min\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_c = SubwayStation;\nexport default SubwayStation;\n\nvar _c;\n\n$RefreshReg$(_c, \"SubwayStation\");","map":{"version":3,"sources":["/Users/Cary/Projects/software_engineering/nycroute/rokietnica-logistical-app/front-end/nycroute-app/src/SubwayStation.js"],"names":["React","Card","stationData","temp_station","name","lines","SubwayStation","stationID","props","match","params","id","station","filter","obj","map","line"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AAEA,OAAO,qBAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB,C,CAEA;AACA;;;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,UADa;AAEnBC,EAAAA,KAAK,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC;AAFY,CAArB;;AAKA,MAAMC,aAAa,GAAG,MAAM;AAC1B,QAAMC,SAAS,GAAGC,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBC,EAArC;AACA,QAAMC,OAAO,GAAGV,WAAW,CAACW,MAAZ,CAAoBC,GAAD,IAASA,GAAG,CAACH,EAAJ,IAAUJ,SAAtC,CAAhB;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA,gBAA6BK,OAAO,CAACR;AAArC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,gBACGQ,OAAO,CAACP,KAAR,CAAcU,GAAd,CAAmBC,IAAD,iBACjB,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,aAAhB;AAAA,+BACE,QAAC,IAAD,CAAM,IAAN;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,SAAS,EAAC,WAAtB;AAAA,sBAAmCA;AAAnC;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,QAAN;AAAe,YAAA,SAAS,EAAC,iBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAKE,QAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,eAME,QAAC,IAAD,CAAM,QAAN;AAAe,YAAA,SAAS,EAAC,iBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF,eAOE,QAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CAvBD;;KAAMV,a;AAyBN,eAAeA,aAAf","sourcesContent":["import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\n\nimport \"./SubwayStation.css\";\nimport stationData from \"./stationData\";\n\n// temp mock data for a single station\n// needs to be extracted from props\nconst temp_station = {\n  name: \"Astor Pl\",\n  lines: [\"4\", \"5\", \"6\", \"A\", \"B\", \"C\", \"1\", \"2\", \"3\"],\n};\n\nconst SubwayStation = () => {\n  const stationID = props.match.params.id;\n  const station = stationData.filter((obj) => obj.id == stationID);\n  return (\n    <div className=\"container\">\n      <h1 className=\"stationName\">{station.name}</h1>\n      <div className=\"cardsWrapper\">\n        {station.lines.map((line) => (\n          <Card className=\"cardWrapper\">\n            <Card.Body>\n              <Card.Title className=\"lineTitle\">{line}</Card.Title>\n              <Card.Subtitle className=\"mb-2 text-muted\">\n                Downtown\n              </Card.Subtitle>\n              <Card.Text>2 min</Card.Text>\n              <Card.Subtitle className=\"mb-2 text-muted\">Uptown</Card.Subtitle>\n              <Card.Text>4 min</Card.Text>\n            </Card.Body>\n          </Card>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default SubwayStation;\n"]},"metadata":{},"sourceType":"module"}