{"ast":null,"code":"var _jsxFileName = \"/Users/Cary/Projects/software_engineering/nycroute/rokietnica-logistical-app/front-end/nycroute-app/src/SubwayStations.js\";\nimport React from \"react\";\nimport { ListGroup } from \"react-bootstrap/ListGroup\"; // temp mock data\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stationData = [{\n  name: \"8 St - NYU\",\n  lines: [\"R\", \"W\"]\n}, {\n  name: \"West 4 St - Washington Square\",\n  lines: [\"A\", \"C\"]\n}, {\n  name: \"14 St - Union Square\",\n  lines: [\"R\", \"W\", \"L\", \"6\"]\n}, {\n  name: \"Astor Pl\",\n  lines: [\"4\", \"5\", \"6\"]\n}, {\n  name: \"Times Square - 42 St\",\n  lines: [\"A\", \"C\", \"E\", \"N\"] // a lot more in reality\n\n}];\n\nconst SubwayStations = () => {\n  return /*#__PURE__*/_jsxDEV(ListGroup, {\n    children: stationData.map(station => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n      children: station.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_c = SubwayStations;\nexport default SubwayStations;\n\nvar _c;\n\n$RefreshReg$(_c, \"SubwayStations\");","map":{"version":3,"sources":["/Users/Cary/Projects/software_engineering/nycroute/rokietnica-logistical-app/front-end/nycroute-app/src/SubwayStations.js"],"names":["React","ListGroup","stationData","name","lines","SubwayStations","map","station"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,2BAA1B,C,CAEA;;;AACA,MAAMC,WAAW,GAAG,CAClB;AACEC,EAAAA,IAAI,EAAE,YADR;AAEEC,EAAAA,KAAK,EAAE,CAAC,GAAD,EAAM,GAAN;AAFT,CADkB,EAKlB;AACED,EAAAA,IAAI,EAAE,+BADR;AAEEC,EAAAA,KAAK,EAAE,CAAC,GAAD,EAAM,GAAN;AAFT,CALkB,EASlB;AACED,EAAAA,IAAI,EAAE,sBADR;AAEEC,EAAAA,KAAK,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB;AAFT,CATkB,EAalB;AACED,EAAAA,IAAI,EAAE,UADR;AAEEC,EAAAA,KAAK,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX;AAFT,CAbkB,EAiBlB;AACED,EAAAA,IAAI,EAAE,sBADR;AAEEC,EAAAA,KAAK,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAFT,CAE+B;;AAF/B,CAjBkB,CAApB;;AAuBA,MAAMC,cAAc,GAAG,MAAM;AAC3B,sBACE,QAAC,SAAD;AAAA,cACGH,WAAW,CAACI,GAAZ,CAAiBC,OAAD,iBACf,QAAC,SAAD,CAAW,IAAX;AAAA,gBAAiBA,OAAO,CAACJ;AAAzB;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CARD;;KAAME,c;AAUN,eAAeA,cAAf","sourcesContent":["import React from \"react\";\nimport { ListGroup } from \"react-bootstrap/ListGroup\";\n\n// temp mock data\nconst stationData = [\n  {\n    name: \"8 St - NYU\",\n    lines: [\"R\", \"W\"],\n  },\n  {\n    name: \"West 4 St - Washington Square\",\n    lines: [\"A\", \"C\"],\n  },\n  {\n    name: \"14 St - Union Square\",\n    lines: [\"R\", \"W\", \"L\", \"6\"],\n  },\n  {\n    name: \"Astor Pl\",\n    lines: [\"4\", \"5\", \"6\"],\n  },\n  {\n    name: \"Times Square - 42 St\",\n    lines: [\"A\", \"C\", \"E\", \"N\"], // a lot more in reality\n  },\n];\n\nconst SubwayStations = () => {\n  return (\n    <ListGroup>\n      {stationData.map((station) => (\n        <ListGroup.Item>{station.name}</ListGroup.Item>\n      ))}\n    </ListGroup>\n  );\n};\n\nexport default SubwayStations;\n"]},"metadata":{},"sourceType":"module"}